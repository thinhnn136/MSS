@model MSS_DEMO.Models.CoursesReportViewModel
@using PagedList.Mvc;
@{
    ViewBag.Title = "Detail";
    var pagecount = Model.PageListLogNote.PageCount != 0 ? Model.PageListLogNote.PageCount : Model.PageListLogNote.PageCount;
    var pagenumber = Model.PageListLogNote.PageCount < Model.PageListLogNote.PageNumber ? 0 : Model.PageListLogNote.PageNumber;

    SelectList listCompleted = new SelectList((IList<string>)Model.completedCour);
    SelectList listCompulsory = new SelectList((IList<string>)Model.compulsoryCour);
}
<br />
<span>
    @Html.ActionLink("Home", "Index", "Home") > @Html.ActionLink("Usage Report", "Mentor", "Student_Course_Log")
    > Class Details
</span>
<br />
<h3>Subject: @ViewBag.Subject - Class: @ViewBag.Class</h3>
<br />
@using (Html.BeginForm("Detail", "Student_Course_Log", FormMethod.Get))
{
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Email</label>
                                    <div class="col-md-9 col-xs-12">
                                        @Html.TextBox("Email", Model.Email, new { @class = "form-control" })
                                        @Html.Hidden("searchCheck", "true")
                                    </div>
                                </div>
                                <br />
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Compulsory</label>
                                    <div class="col-md-9 col-xs-12">
                                        @Html.DropDownList("compulsoryCourse", listCompulsory, "--- All ---", new { @name = "compulsoryCourse", @class = "form-control select" })
                                    </div>
                                </div>
                                <br />
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Subject</label>
                                    <div class="col-md-9 col-xs-12">
                                        @Html.DropDownList("Subject_ID", Model.listSubject, "--- All ---", new { @name = "Subject_ID", @class = "form-control select" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Completed</label>
                                    <div class="col-md-9 col-xs-12">
                                        @Html.DropDownList("completedCourse", listCompleted, "--- All ---", new { @name = "completedCourse", @class = "form-control select" })
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="panel-footer text-center">
                    <button class="btn btn-success" type="submit"><i class="fa fa-search"></i>Search</button>
                </div>
            </div>
        </div>
    </div>
}
<span style="color: red;">@ViewBag.Nodata</span>
@if (Model.PageListLogNote.PageCount != 0)
{
    int stt = 1 + (pagenumber - 1) * Model.PageListLogNote.PageSize;

    <label>Showing  @ViewBag.CountLog results of @ViewBag.CountRoll students&emsp;&emsp; </label>
    <div style="overflow-x: auto;" class="drag">
        <div class="table-responsive text-nowrap">
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>No</th>
                        <th>
                            Roll
                        </th>
                        <th>
                            Email
                        </th>
                        <th style="min-width: 250px;">
                            Course Name
                        </th>
                        <th>
                            Note
                        </th>
                        <th>
                            Enrollment Time
                        </th>
                        <th>
                            Start Time
                        </th>
                        <th>
                            Last ActivityTime
                        </th>
                        <th>
                            Overall Progress
                        </th>
                        <th>
                            Estimated
                        </th>
                        <th>
                            Completed
                        </th>
                        <th>
                            Status
                        </th>
                        <th>
                            Completion Time
                        </th>
                        <th>
                            Course Grade
                        </th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.PageListLogNote)
                    {
                        string textNote = item.Note;
                        textNote = !string.IsNullOrEmpty(textNote) ? (textNote.Length > 100 ? "..." + textNote.Substring(textNote.Length - 100) : textNote) : "";
                        var Note = item.Roll + "^" + item.Semester_ID + "^" + item.Subject_ID;
                        var complete = item.Completed == true ? "Yes" : "No";
                        var status = item.Status == true ? "Yes" : "No";
                        var completeTime = item.Completion_Time.ToString().Contains("1/1/1970") ? "" : Convert.ToDateTime(item.Completion_Time).ToString("dd/MM/yyyy");
                        string Course_Enrollment_Time = Convert.ToDateTime(item.Course_Enrollment_Time).ToString("dd/MM/yyyy");
                        string Last_Course_Activity_Time = Convert.ToDateTime(item.Last_Course_Activity_Time).ToString("dd/MM/yyyy");
                        string Course_Start_Time = Convert.ToDateTime(item.Course_Start_Time).ToString("dd/MM/yyyy");
                    <tr>
                        <td>@(stt++)</td>
                        <td>
                            <a href="" data-toggle="modal" data-target="#exampleModal" id="modalNote" >@item.Roll</a>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Course_Name)
                        </td>
                        <td>
                            <span id="textArea" style="width: 280px; height: 80px;">@textNote</span>
                            @Html.Hidden("Note", Note)
                            @Html.Hidden("TextNode",item.Note)
                        </td>
                        <td>
                            @Course_Enrollment_Time
                        </td>

                        <td>
                            @Course_Start_Time
                        </td>
                        <td>
                            @Last_Course_Activity_Time
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Overall_Progress)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Estimated)
                        </td>
                        <td>
                            @complete
                        </td>
                        <td>
                            @status
                        </td>
                        <td>
                            @completeTime
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Course_Grade)
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <label>Page </label> @pagenumber <label> of </label> @pagecount
}
@Html.PagedListPager(Model.PageListLogNote, page => Url.Action("Detail",
 new
 {
     page,
     Email = Model.Email,
     compulsoryCourse = Model.compulsoryCourse,
     completedCourse = Model.completedCourse,
     Subject_ID = Model.Subject_ID,
     searchCheck = "true"
 }))

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Edit note</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
               <textarea id="textAreaNote" style="height: 252px; width: 540px;max-width: 550px;"></textarea>
                @Html.Hidden("idModelNote")
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="save">Save changes</button>
            </div>
        </div>
    </div>
</div>
<script>
    var mx = 0;

    $(".drag").on({
        mousemove: function (e) {
            var mx2 = e.pageX - this.offsetLeft;
            if (mx) this.scrollLeft = this.sx + mx - mx2;
        },
        mousedown: function (e) {
            this.sx = this.scrollLeft;
            mx = e.pageX - this.offsetLeft;
        }
    });

    $(document).on("mouseup", function () {
        mx = 0;
    });

    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
    $(".table tbody #modalNote").each(function (id, item) {
        var noteID = $(this).parents("tr:first").find("#Note").val();
        var TextNode = $(this).parents("tr:first").find("#TextNode").val();
        $(this).click(function ()
        {                  
            $("#textAreaNote").val(TextNode);
            $("#idModelNote").val(noteID);
        });       
    });
    $("#save").click(function ()
        {      var noteID = $("#idModelNote").val();      
               var note = $("#textAreaNote").val();  
                $.ajax({
                url: '@Url.Action("AddNote","Student_Course_Log")',
                type: 'POST',
                data:  { 'id' : noteID, 'note' : note },
                dataType: 'json',
                success: function (data) {
                    if (data.check == true) {
                        window.location.reload();
                    }
                 }
                }).done(function () {
                    
                });
        });
   @*$(".table tbody #textArea").each(function (id, item) {
        $(this).focusout(function ()
        {
                var noteID = $(this).parents("tr:first").find("#Note").val();
                var note = $(this).parents("tr:first").find("#textArea").val();
                $.ajax({
                url: '@Url.Action("AddNote","Student_Course_Log")',
                type: 'POST',
                data:  { 'id' : noteID, 'note' : note },
                dataType: 'json',
                success: function (data) {
                    if (data.check == true) {
                        window.location.reload();
                    }
                 }
                 }).done(function () {
                });
         });
   });*@
</script>